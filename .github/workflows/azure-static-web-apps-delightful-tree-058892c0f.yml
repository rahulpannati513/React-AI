name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true # Checkout submodules if your repo has them
          lfs: false # Change to true if you're using Git LFS

      # Cache node modules to speed up subsequent builds (Optional)
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      # Set environment variables from GitHub secrets
      - name: Set VITE_API_BASE_URL environment variable
        run: echo "VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}" >> $GITHUB_ENV

      # Install dependencies (npm/yarn/pnpm - adjust as per your project)
      - name: Install dependencies
        run: npm install

      # Build the app
      - name: Build the app
        run: npm run build

      # Deploy the app to Azure Static Web Apps
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_DELIGHTFUL_TREE_058892C0F }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for GitHub integrations (e.g., PR comments)
          action: "upload"
          app_location: "/" # Adjust this if your app is in a subfolder (e.g., 'frontend')
          api_location: "api" # Optional, only if you have an API
          output_location: "dist" # Adjust this if your build outputs to a different folder (e.g., 'build', 'public')

      # Optional: Add a step to verify deployment was successful (print logs or deploy details)
      - name: Deployment Status
        run: echo "Deployment completed successfully!"
